
@{
    ViewData["Title"] = "ResponsiveClasses";
}

<h2>ResponsiveClasses</h2>

<p>
    <a href="https://getbootstrap.com/docs/4.0/layout/grid/#responsive-classes">
        https://getbootstrap.com/docs/4.0/layout/grid/#responsive-classes
    </a>
</p>
<p>
    <b>Responsive classes</b>
    Bootstrap’s grid includes five tiers of predefined classes for building complex
    responsive layouts. Customize the size of your columns on extra small, small, medium,
    large, or extra large devices however you see fit.
    <b>All breakpoints</b>
    For grids that are the same from the smallest of devices to the largest, use the .col
    and .col-* classes. Specify a numbered class when you need a particularly sized column;
    otherwise, feel free to stick to .col.
</p>
<div class="container">
    <div class="row">
        <div class="col">col</div>
        <div class="col">col</div>
        <div class="col">col</div>
        <div class="col">col</div>
    </div>
    <div class="row">
        Random Row
    </div>
    <div class="row">
        <div class="col-8">col-8</div>
        <div class="col-4">col-4</div>
    </div>
</div>
<br/>
<p>
    <b>Stacked to horizontal</b>
    Using a single set of .col-sm-* classes, you can create a basic grid system 
    that starts out stacked before becoming horizontal with at the small breakpoint (sm).
</p>
<div class="container">
    <div class="row">
        <div class="col-sm-8">col-sm-8</div>
        <div class="col-sm-4">col-sm-4</div>
    </div>
    <div class="row">
        Random Row
    </div>
    <div class="row">
        <div class="col-sm">col-sm</div>
        <div class="col-sm">col-sm</div>
        <div class="col-sm">col-sm</div>
    </div>
</div>
<hr/>
<p>
    <b>Mix and match</b>
    Don’t want your columns to simply stack in some grid tiers? Use a combination 
    of different classes for each tier as needed. See the example below for 
    a better idea of how it all works.
</p>
<div class="container">
    <!-- Stack the columns on mobile by making one full-width and the other half-width -->
    <div class="row">
        <div class="col-12 col-md-8">.col-12 .col-md-8</div>
        <div class="col-6 col-md-4">.col-6 .col-md-4</div>
    </div>
    <div class="row">
        Random Row
    </div>
    <!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->
    <div class="row">
        <div class="col-6 col-md-4">.col-6 .col-md-4</div>
        <div class="col-6 col-md-4">.col-6 .col-md-4</div>
        <div class="col-6 col-md-4">.col-6 .col-md-4</div>
    </div>
    <div class="row">
        Random Row
    </div>
    <!-- Columns are always 50% wide, on mobile and desktop -->
    <div class="row">
        <div class="col-6">.col-6</div>
        <div class="col-6">.col-6</div>
    </div>
</div>